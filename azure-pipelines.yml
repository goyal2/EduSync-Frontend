trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  NODE_VERSION: '20.x'
  CACHE_KEY: npm | $(Agent.OS) | package-lock.json
  CACHE_PATH: $(System.DefaultWorkingDirectory)/node_modules

steps:
- task: NodeTool@0
  inputs:
    versionSpec: $(NODE_VERSION)
  displayName: 'Install Node.js'

- task: Cache@2
  inputs:
    key: $(CACHE_KEY)
    path: $(CACHE_PATH)
  displayName: 'Cache node_modules'

- script: |
    npm ci --legacy-peer-deps
  displayName: 'Install Dependencies'
  condition: ne(variables['CacheRestored'], 'true')

- script: |
    echo '{
      "extends": [
        "react-app",
        "react-app/jest"
      ],
      "rules": {
        "react/react-in-jsx-scope": "off",
        "react/prop-types": "off",
        "react-hooks/exhaustive-deps": "warn",
        "no-unused-vars": "warn"
      }
    }' > .eslintrc.json
  displayName: 'Create ESLint Config'

- script: |
    echo "ESLINT_NO_DEV_ERRORS=true" > .env
    echo "DISABLE_ESLINT_PLUGIN=true" >> .env
  displayName: 'Configure Build Environment'

- script: |
    export CI=false
    npm run build
  displayName: 'Build React App'

- script: |
    CI=true npm test -- --watchAll=false --passWithNoTests
  displayName: 'Run Tests'
  continueOnError: true

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/junit.xml'
    mergeTestResults: true
    testRunTitle: 'React Tests'
  condition: succeededOrFailed()

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/coverage'
  condition: succeededOrFailed()

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'build'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true
  displayName: 'Archive Build Files'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  displayName: 'Publish Build Artifacts' 